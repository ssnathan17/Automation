#!/bin/bash

# Variables

INPUT_FILE="unwanted_text.txt"        # File with content to compare
TARGET_DIR="/home/senthil/shell"  # Directory to search .txt files
EXCLUDE_FILE="exclude_text.txt"  # File containing exclusion lines
LOG_FILE="deletion_log.txt"   # Log of deleted lines

# Create or clear log file
> "$LOG_FILE"

# Read exclusion lines into an array
mapfile -t exclusion_lines < "$EXCLUDE_FILE"

# Function to check if a line matches any exclusion content
is_line_excluded() {
    local line=$1
    for exclude in "${exclusion_lines[@]}"; do
        if [[ "$line" == *"$exclude"* ]]; then
            return 0  # Exclude this line
        fi
    done
    return 1  # Keep this line
}

# Read input file into an array
mapfile -t input_lines < "$INPUT_FILE"

# Find all .txt files in the target directory and its subdirectories
find "$TARGET_DIR" -type f -name "*.exc" | while read -r txt_file; do
    # Create a temporary file to store updated content
    temp_file=$(mktemp)
    
    # Read the txt file line by line
    while IFS= read -r line; do
        # Check if the current line is excluded
        if is_line_excluded "$line"; then
            echo "Skipping excluded line: $line from $txt_file"
            continue  # Skip this line
        fi
        
        # Check if the current line matches any line in the input file
        match_found=false
        for input_line in "${input_lines[@]}"; do
            if [[ "$line" == "$input_line" ]]; then
                match_found=true
                echo "Deleting line: $line from $txt_file" >> "$LOG_FILE"
                break
            fi
        done
        
        # If no match was found, keep the line in the temporary file
        if [[ $match_found == false ]]; then
            echo "$line" >> "$temp_file"
        fi
    done < "$txt_file"
    
    # Replace the original file with the updated content
    mv "$temp_file" "$txt_file"
done

# Check if the log file is empty and print the appropriate message
if [[ ! -s "$LOG_FILE" ]]; then
    echo "No files modified."
else
    echo "Line deletion completed. Check $LOG_FILE for details."
fi
